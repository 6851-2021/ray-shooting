{"version":3,"sources":["mode.js","PersistentAVLTree.js","eventType.js","img/plus.svg","img/clipboard.svg","img/ray.svg","img/wrench.svg","priorityQueue.js","App.js","reportWebVitals.js","index.js"],"names":["modes","NONE","CREATING_LINE_SEGMENT","SHOOTING_RAY","getHeight","node","height","getBalance","right","left","Line","startX","startY","endX","endY","action","this","Node","element","id","Math","random","isEqual","a","b","updateHeight","max","copyNode","newNode","og","copySubtree","path","Set","has","PersistentAVLTree","comparisonFunc","_compare","sortLeftToRight","current","versions","currVersionNum","x","undefined","Error","aCurrY","bCurrY","push","version","length","tree","_search","getMin","i","getMax","versionTree","getVersion","tempTree","_insert","successor","getSuccessor","node1","node2","tmp","prototype","search","direction","insert","balance","subLeftDirection","_rightRotate","_leftRotate","subRightDirection","l","lr","r","rl","delete","_delete","parent","oldNode","detachedMax","_deleteMax","_balance","deleteMax","newRoot","y","z","_getTallestSubtree","_triNodeRestructure","c","eventType","START","END","CROSS","PriorityQueue","leftChild","index","rightChild","floor","peek","heap","swap","indexOne","indexTwo","idx","val","extractMin","root","shift","unshift","pop","heapify","largest","App","useState","Mode","mode","setMode","firstPoint","setFirstPoint","lines","setLines","setTree","canvasRef","useRef","intersections","buildTree","queue","forEach","line","EventType","x1","shouldInsert","x2","window","innerWidth","evt","console","log","y1","y2","innerHeight","predecessor","getPredecessor","processIntersection","cmp","x3","y3","x4","y4","onSegment","p","q","min","intersectionX","intersectionY","toString","add","line1","line2","intX","intY","pred","succ","step","ceil","createLineElement","color","elem","document","createElementNS","setAttribute","createCircleElement","createTextElement","text","innerHTML","className","onClick","e","target","tagName","toLowerCase","clientX","clientY","appendChild","newPoint","concat","shootVerticalRay","startsWith","alert","split","src","plusIcon","alt","rayIcon","firstChild","removeChild","createButton","width","wrenchIcon","ref","onMouseMove","getElementById","remove","body","style","cursor","topRayY","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.315d8b26.chunk.js","sourcesContent":["const modes = {\n  NONE: 0,\n  CREATING_LINE_SEGMENT: 1,\n  SHOOTING_RAY: 2\n};\n\nexport default modes;","function getHeight(node) {\n  if (node === null) {\n    return 0;\n  }\n  return node.height;\n}\n\nfunction getBalance(node) {\n  if (node === null) {\n    return 0;\n  }\n\n  return getHeight(node.right) - getHeight(node.left);\n}\n\nexport class Line {\n  startX;\n  startY;\n  endX;\n  endY;\n  action;\n\n  constructor(startX, startY, endX, endY, action) {\n    this.startX = startX;\n    this.startY = startY;\n    this.endX = endX;\n    this.endY = endY;\n    this.action = action;\n  }\n}\n\nfunction Node(element) {\n  this.element = element;\n  this.height = 1;\n  this.left = null;\n  this.right = null;\n  this.id = Math.random();\n}\n\nfunction isEqual(a, b) {\n  if (a == null || b == null) {\n    return a === b;\n  }\n  return (\n    a.element.startX === b.element.startX &&\n    a.element.startY === b.element.startY &&\n    a.element.endX === b.element.endX &&\n    a.element.endY === b.element.endY\n  );\n}\n\nfunction updateHeight(node) {\n  node.height = Math.max(getHeight(node.left), getHeight(node.right)) + 1;\n}\n\nfunction copyNode(node) {\n  const newNode = new Node(node.element);\n  newNode.left = node.left;\n  newNode.right = node.right;\n  newNode.height = node.height;\n  newNode.og = node;\n  return newNode;\n}\n\nexport function copySubtree(node, path = new Set()) {\n  if (node == null) {\n    return null;\n  }\n  if (path.has(node.id)) {\n    return null;\n  }\n  const newNode = copyNode(node);\n  newNode.left = copySubtree(node.left, new Set([...path, node.id]));\n  newNode.right = copySubtree(node.right, new Set([...path, node.id]));\n  return newNode;\n}\n\nexport class PersistentAVLTree {\n  constructor(comparisonFunc) {\n    if (typeof comparisonFunc === \"function\") {\n      this._compare = comparisonFunc;\n    } else {\n      this._compare = this.sortLeftToRight;\n    }\n    this.current = null;\n    this.versions = [];\n    this.currVersionNum = 0;\n  }\n\n  // make a different compare functino for comparing points\n  sortLeftToRight(a, b) {\n    let x;\n    if (a.endX === undefined && a.endY === undefined) {\n      x = a.startX;\n    } else {\n      if (\n        this.currVersionNum < a.startX ||\n        this.currVersionNum > a.endX ||\n        this.currVersionNum < b.startX ||\n        this.currVersionNum > b.endX\n      ) {\n        throw new Error(\"Point not in range of line!\");\n      }\n      x = this.currVersionNum;\n    }\n\n    const aCurrY =\n      a.endX === undefined && a.endY === undefined\n        ? a.startY\n        : a.startY +\n          ((a.endY - a.startY) / (a.endX - a.startX)) * (x - a.startX);\n    const bCurrY =\n      b.startY + ((b.endY - b.startY) / (b.endX - b.startX)) * (x - b.startX);\n\n    if (aCurrY < bCurrY) {\n      return -1;\n    } else if (aCurrY > bCurrY) {\n      return 1;\n    }\n    return 0;\n  }\n\n  step() {\n    this.versions.push(this.current);\n    this.currVersionNum += 1;\n  }\n\n  getVersion(version) {\n    return version < this.versions.length ? this.versions[version] : null;\n  }\n\n  getSuccessor(element, tree = this.current) {\n    const { node, path } = this._search(element, tree);\n    if (node === null || node === undefined) {\n      return null;\n    }\n    if (node.right) {\n      return this.getMin(node.right);\n    } else {\n      for (let i = path.length - 2; i >= 0; i--) {\n        if (path[i].left === path[i + 1]) {\n          return path[i];\n        }\n      }\n    }\n    return null;\n  }\n\n  getPredecessor(element, tree = this.current) {\n    const { node, path } = this._search(element, tree);\n    if (node === null || node === undefined) {\n      return null;\n    }\n    if (node.left) {\n      return this.getMax(node.left);\n    } else {\n      for (let i = path.length - 2; i >= 0; i--) {\n        if (path[i].right === path[i + 1]) {\n          return path[i];\n        }\n      }\n    }\n    return null;\n  }\n\n  shootVerticalRay(version, element) {\n    element = new Line(version, element);\n    const versionTree = this.getVersion(version);\n    if (versionTree === null) {\n      return null;\n    }\n    const tempTree = this._insert(element, versionTree);\n    const successor = this.getSuccessor(element, tempTree);\n    return successor !== null ? successor : true;\n  }\n\n  swap(node1, node2) {\n    const tmp = node1.element;\n    node1.element = node2.element;\n    node2.element = tmp;\n  }\n}\n\n// TODO: put data on the node.\nPersistentAVLTree.prototype.search = function (element, tree = this.current) {\n  return this._search(element, tree);\n};\n\nPersistentAVLTree.prototype._search = function (element, node, path = []) {\n  if (node === null) {\n    return { node, path };\n  }\n\n  path.push(node);\n  var direction = this._compare(element, node.element);\n  if (direction < 0) {\n    return this._search(element, node.left, path);\n  } else if (direction > 0) {\n    return this._search(element, node.right, path);\n  }\n  return { node, path };\n};\n\nPersistentAVLTree.prototype.insert = function (element) {\n  this.current = this._insert(element, this.current);\n  return this.current;\n};\n\nPersistentAVLTree.prototype._insert = function (element, node) {\n  if (node === null) {\n    const newNode = new Node(element);\n    return newNode;\n  }\n  node = copyNode(node);\n\n  // just copy here, propagate to children\n  var direction = this._compare(element, node.element);\n  if (direction < 0) {\n    node.left = this._insert(element, node.left);\n  } else if (direction > 0) {\n    node.right = this._insert(element, node.right);\n  }\n  node.height = Math.max(getHeight(node.left), getHeight(node.right)) + 1;\n\n  var balance = getBalance(node);\n\n  if (balance < -1) {\n    var subLeftDirection = this._compare(element, node.left.element);\n    if (subLeftDirection < 0) {\n      return copySubtree(this._rightRotate(node));\n    } else if (subLeftDirection > 0) {\n      node.left = this._leftRotate(node.left);\n      return copySubtree(this._rightRotate(node));\n    }\n  } else if (balance > 1) {\n    var subRightDirection = this._compare(element, node.right.element);\n    if (subRightDirection > 0) {\n      return copySubtree(this._leftRotate(node));\n    } else if (subRightDirection < 0) {\n      node.right = this._rightRotate(node.right);\n      return copySubtree(this._leftRotate(node));\n    }\n  }\n  return node;\n};\n\nPersistentAVLTree.prototype._rightRotate = function (node) {\n  var l = node.left;\n  var lr = l.right;\n  l.right = node;\n  node.left = lr;\n  node.height = Math.max(getHeight(node.left), getHeight(node.right)) + 1;\n  l.height = Math.max(getHeight(l.left), getHeight(l.right)) + 1;\n  return l;\n};\n\nPersistentAVLTree.prototype._leftRotate = function (node) {\n  var r = node.right;\n  var rl = r.left;\n  r.left = node;\n  node.right = rl;\n  node.height = Math.max(getHeight(node.left), getHeight(node.right)) + 1;\n  r.height = Math.max(getHeight(r.left), getHeight(r.right)) + 1;\n  return r;\n};\n\nPersistentAVLTree.prototype.delete = function (element) {\n  if (this.current === null) return;\n  this.current = this._delete(element, this.current, null);\n};\n\nPersistentAVLTree.prototype._delete = function (element, node, parent) {\n  if (node === null) {\n    return null;\n  }\n  const oldNode = node;\n  node = copyNode(node);\n  var direction = this._compare(element, node.element);\n  if (direction < 0) {\n    // go left\n    if (node.left && this._compare(element, node.left.element) === 0) {\n      this._delete(element, node.left, node);\n    } else {\n      node.left = this._delete(element, node.left, node);\n      updateHeight(node);\n    }\n  } else if (direction > 0) {\n    // go right\n    if (node.right && this._compare(element, node.right.element) === 0) {\n      this._delete(element, node.right, node);\n    } else {\n      node.right = this._delete(element, node.right, node);\n      updateHeight(node);\n    }\n  } else if (node.left !== null && node.right !== null) {\n    // found our target element\n    var detachedMax = this._deleteMax(node.left, node);\n    node.element = detachedMax.element; // TODO: if we end up adding data to nodes, copy it here\n    node.height = Math.max(node.right.height, detachedMax.height) + 1;\n    if (parent !== null) {\n      if (parent.right === oldNode) {\n        parent.right = node;\n      } else {\n        parent.left = node;\n      }\n    }\n  } else if (node.left === null) {\n    if (node.right === null) {\n      // both children are empty\n      if (parent === null) {\n        return null;\n      }\n      if (parent.right === oldNode) {\n        parent.right = null;\n      } else {\n        parent.left = null;\n      }\n      updateHeight(parent);\n    } else {\n      // only has right\n      if (parent === null) {\n        return node.right;\n      }\n      if (parent.right === oldNode) {\n        parent.right = node.right;\n      } else {\n        parent.left = node.right;\n      }\n\n      node.right = null;\n      updateHeight(parent);\n    }\n  } else {\n    // only has left\n    if (parent === null) {\n      return node.left;\n    }\n    if (parent.right === oldNode) {\n      parent.right = node.left;\n    } else {\n      parent.left = node.left;\n    }\n\n    node.left = null;\n    updateHeight(parent);\n  }\n  return this._balance(node, parent); // backtrack and balance everyone\n};\n\nPersistentAVLTree.prototype.deleteMax = function () {\n  return this._deleteMax(this.current, null).element;\n};\n\nPersistentAVLTree.prototype._deleteMax = function (node, parent) {\n  var max;\n  if (node.right === null) {\n    // max found\n    max = this._delete(node.element, node, parent);\n    this._balance(node, parent);\n    return max;\n  } // not yet at max, keep going\n  max = this._deleteMax(node.right, node);\n  this._balance(node, parent); // backtrack and balance everyone in the left sub tree\n  return max;\n};\n\nPersistentAVLTree.prototype.getMin = function (node) {\n  if (node.left === null) {\n    return node;\n  }\n  return this.getMin(node.left);\n};\n\nPersistentAVLTree.prototype.getMax = function (node) {\n  if (node.right === null) {\n    return node;\n  }\n  return this.getMax(node.right);\n};\n\nPersistentAVLTree.prototype._balance = function (node, parent) {\n  node = copySubtree(node);\n  updateHeight(node);\n  var balance = getBalance(node);\n  var newRoot, x, y, z;\n  if (balance < -1) {\n    node = copySubtree(node);\n    z = node;\n    y = node.left;\n    x = this._getTallestSubtree(y);\n    newRoot = this._triNodeRestructure(x, y, z, parent);\n    updateHeight(z);\n    updateHeight(x);\n    updateHeight(y);\n\n    updateHeight(z);\n    updateHeight(x);\n    updateHeight(y);\n    return newRoot;\n  } else if (balance > 1) {\n    node = copySubtree(node);\n    z = node;\n    y = node.right;\n    x = this._getTallestSubtree(y);\n    newRoot = this._triNodeRestructure(x, y, z, parent);\n    updateHeight(z);\n    updateHeight(x);\n    updateHeight(y);\n\n    updateHeight(z);\n    updateHeight(x);\n    updateHeight(y);\n    return newRoot;\n  }\n  updateHeight(node);\n  return node;\n};\n\nPersistentAVLTree.prototype._getTallestSubtree = function (node) {\n  var balance = getBalance(node);\n  if (balance < 0) {\n    return node.left;\n  }\n  return node.right;\n};\n\nPersistentAVLTree.prototype._triNodeRestructure = function (x, y, z, parent) {\n  var a, b, c;\n  if (z.right === y && y.left === x) {\n    a = z;\n    b = x;\n    c = y;\n  }\n  if (z.right === y && y.right === x) {\n    a = z;\n    b = y;\n    c = x;\n  }\n  if (z.left === y && y.left === x) {\n    a = x;\n    b = y;\n    c = z;\n  }\n  if (z.left === y && y.right === x) {\n    a = y;\n    b = x;\n    c = z;\n  }\n  if (\n    z.og === this.current ||\n    isEqual(z, this.current) ||\n    z === this.current ||\n    z.element === this.current.element || // TODO: THIS IS JANK\n    parent === null\n  ) {\n    this.current = b;\n  } else if (isEqual(parent.left, z)) {\n    parent.left = b;\n  } else {\n    parent.right = b;\n  }\n  if (!isEqual(b.left, x) && !isEqual(b.left, y) && !isEqual(b.left, z)) {\n    a.right = b.left;\n  }\n  if (!isEqual(b.right, x) && !isEqual(b.right, y) && !isEqual(b.right, z)) {\n    c.left = b.right;\n  }\n  b.left = a;\n  b.right = c;\n  return b;\n};\n","const eventType = {\n  START: 'start',\n  END: 'end',\n  CROSS: 'cross'\n};\n\nexport default eventType;","export default __webpack_public_path__ + \"static/media/plus.18e46bbf.svg\";","export default __webpack_public_path__ + \"static/media/clipboard.f03ddbea.svg\";","export default __webpack_public_path__ + \"static/media/ray.86b55e34.svg\";","export default __webpack_public_path__ + \"static/media/wrench.6be9f8c4.svg\";","export default class PriorityQueue {\n  constructor() {\n    this.heap = [];\n  }\n\n  leftChild = (index) => index * 2 + 1;\n  rightChild = (index) => index * 2 + 2;\n  parent = (index) => Math.floor((index - 1) / 2);\n  peek = () => this.heap[0];\n\n  swap = (indexOne, indexTwo) => {\n    const tmp = this.heap[indexOne];\n    this.heap[indexOne] = this.heap[indexTwo];\n    this.heap[indexTwo] = tmp;\n  }\n\n  insert = (element) => {\n    this.heap.push(element);\n    let idx = this.heap.length - 1;\n\n    while (idx !== 0 && this.heap[idx].val < this.heap[this.parent(idx)].val) {\n      this.swap(idx, this.parent(idx));\n      idx = this.parent(idx);\n    }\n  }\n\n  extractMin = () => {\n    const root = this.heap.shift();\n\n    this.heap.unshift(this.heap[this.heap.length - 1]);\n    this.heap.pop();\n\n    this.heapify(0);\n    return root;\n  }\n  \n  heapify = (index) => {\n    let left = this.leftChild(index);\n    let right = this.rightChild(index);\n    let largest = index;\n\n    if (left < this.heap.length && this.heap[largest].val > this.heap[left].val) {\n      largest = left;\n    }\n\n    if (right < this.heap.length && this.heap[largest].val > this.heap[right].val) {\n      largest = right;\n    }\n\n    if (largest !== index) {\n      this.swap(largest, index);\n      this.heapify(largest);\n    }\n  }\n};","import React, { useRef, useState } from \"react\";\nimport Mode from \"./mode\";\nimport \"./App.scss\";\nimport { PersistentAVLTree, Line, copySubtree } from \"./PersistentAVLTree\";\nimport EventType from \"./eventType\";\n\nimport clipboardIcon from \"./img/clipboard.svg\";\nimport plusIcon from \"./img/plus.svg\";\nimport rayIcon from \"./img/ray.svg\";\nimport wrenchIcon from \"./img/wrench.svg\";\nimport PriorityQueue from \"./priorityQueue\";\n\nconst ENABLE_COPY_BUTTON = false;\n\nconst App = () => {\n  const [mode, setMode] = useState(Mode.CREATING_LINE_SEGMENT);\n  const [firstPoint, setFirstPoint] = useState(null);\n  const [lines, setLines] = useState([]);\n  const [tree, setTree] = useState(new PersistentAVLTree());\n\n  const canvasRef = useRef(null);\n  const intersections = new Set();\n\n  const buildTree = (lines) => {\n    if (lines.length === 0) {\n      return;\n    }\n\n    const tree = new PersistentAVLTree();\n    const dx = 1;\n\n    const queue = new PriorityQueue();\n\n    lines.forEach((line) => {\n      queue.insert({\n        eventType: EventType.START,\n        line,\n        val: line.x1,\n        shouldInsert: true,\n      });\n\n      queue.insert({\n        eventType: EventType.END,\n        line,\n        val: line.x2,\n      });\n    });\n\n    for (let i = 0; i < window.innerWidth; i += dx) {\n      while (queue.peek() !== undefined && queue.peek().val <= i) {\n        const evt = queue.extractMin();\n        console.log(evt);\n\n        if (evt.eventType === EventType.START) {\n          let line, x1, y1, x2, y2;\n\n          if (evt.shouldInsert) {\n            x1 = evt.line.x1;\n            y1 = window.innerHeight - evt.line.y1;\n            x2 = evt.line.x2;\n            y2 = window.innerHeight - evt.line.y2;\n\n            line = new Line(x1, y1, x2, y2, evt.line.action);\n            tree.insert(line);\n          } else {\n            x1 = evt.line.startX;\n            y1 = evt.line.startY;\n            x2 = evt.line.endX;\n            y2 = evt.line.endY;\n\n            line = evt.line;\n          }\n\n          // Take care of crossing segments that follow this event\n          const successor = tree.getSuccessor(line);\n          const predecessor = tree.getPredecessor(line);\n\n          const processIntersection = (cmp) => {\n            const x3 = cmp.element.startX;\n            const y3 = cmp.element.startY;\n            const x4 = cmp.element.endX;\n            const y4 = cmp.element.endY;\n\n            // Checks if q is on line segment pr\n            const onSegment = (p, q, r) =>\n              q.x <= Math.max(p.x, r.x) &&\n              q.x >= Math.min(p.x, r.x) &&\n              q.y <= Math.max(p.y, r.y) &&\n              q.y >= Math.min(p.y, r.y);\n\n            const intersectionX =\n              ((x1 * y2 - y1 * x2) * (x3 - x4) -\n                (x1 - x2) * (x3 * y4 - y3 * x4)) /\n              ((x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4));\n            const intersectionY =\n              ((x1 * y2 - y1 * x2) * (y3 - y4) -\n                (y1 - y2) * (x3 * y4 - y3 * x4)) /\n              ((x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4));\n\n            if (\n              !intersections.has(intersectionX.toString() + \",\" + intersectionY.toString()) &&\n              // intersectionX > i &&\n              onSegment(\n                { x: x1, y: y1 },\n                { x: intersectionX, y: intersectionY },\n                { x: x2, y: y2 }\n              ) &&\n              onSegment(\n                { x: x3, y: y3 },\n                { x: intersectionX, y: intersectionY },\n                { x: x4, y: y4 }\n              )\n            ) {\n              intersections.add(intersectionX.toString() + \",\" + intersectionY.toString())\n              queue.insert({\n                eventType: EventType.CROSS,\n                line1: line,\n                line2: cmp.element,\n                intX: intersectionX,\n                intY: intersectionY,\n                val: intersectionX - 1,\n              });\n            }\n          };\n\n          if (successor !== null) processIntersection(successor);\n          if (predecessor !== null) processIntersection(predecessor);\n        } else if (evt.eventType === EventType.END) {\n          const { x1, y1, x2, y2 } = evt.line;\n          const line = new Line(\n            x1,\n            window.innerHeight - y1,\n            x2,\n            window.innerHeight - y2\n          );\n\n          const pred = tree.getPredecessor(line);\n          const succ = tree.getSuccessor(line);\n\n          if (pred !== null) {\n            queue.insert({\n              eventType: EventType.START,\n              line: pred.element,\n              val: evt.val,\n              shouldInsert: false\n            });\n          }\n\n          if (succ !== null) {\n            queue.insert({\n              eventType: EventType.START,\n              line: succ.element,\n              val: evt.val,\n              shouldInsert: false\n            });\n          }\n\n          tree.delete(line);\n        } else if (evt.eventType === EventType.CROSS) {\n          const tmp = copySubtree(tree.current);\n          const node1 = tree.search(evt.line1, tmp).node;\n          const node2 = tree.search(evt.line2, tmp).node;\n\n          if (node1 === null || node2 === null) {\n            // TODO: Show error message\n            tree.step();\n            continue;\n          }\n\n          tree.swap(node1, node2);\n          tree.current = tmp;\n\n          queue.insert({\n            eventType: EventType.START,\n            line: node1.element,\n            val: Math.ceil(evt.intX),\n            shouldInsert: false,\n          });\n\n          queue.insert({\n            eventType: EventType.START,\n            line: node2.element,\n            val: Math.ceil(evt.intX),\n            shouldInsert: false,\n          });\n        }\n      }\n\n      tree.step();\n    }\n\n    return tree;\n  };\n\n  const createLineElement = (line, id = null, color = \"red\") => {\n    const elem = document.createElementNS(\"http://www.w3.org/2000/svg\", \"line\");\n    elem.setAttribute(\"x1\", line.x1);\n    elem.setAttribute(\"y1\", line.y1);\n    elem.setAttribute(\"x2\", line.x2);\n    elem.setAttribute(\"y2\", line.y2);\n    elem.setAttribute(\"stroke\", color);\n\n    if (id !== null) {\n      elem.setAttribute(\"id\", id);\n    }\n\n    return elem;\n  };\n\n  const createCircleElement = (x, y, r = 4) => {\n    const elem = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"circle\"\n    );\n    elem.setAttribute(\"cx\", x);\n    elem.setAttribute(\"cy\", y);\n    elem.setAttribute(\"r\", r);\n    return elem;\n  };\n\n  const createTextElement = (x, y, text) => {\n    const elem = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n    elem.setAttribute(\"x\", x);\n    elem.setAttribute(\"y\", y);\n    elem.setAttribute(\"text-anchor\", \"middle\");\n    elem.setAttribute(\"dominant-baseline\", \"middle\");\n    elem.innerHTML = text;\n    return elem;\n  }\n\n  const handleClick = (e) => {\n    if (e.target.tagName.toLowerCase() !== \"svg\") return;\n\n    if (mode === Mode.CREATING_LINE_SEGMENT) {\n      if (firstPoint === null) {\n        setFirstPoint({\n          x: e.clientX,\n          y: e.clientY,\n        });\n\n        canvasRef.current.appendChild(\n          createCircleElement(e.clientX, e.clientY)\n        );\n      } else {\n        setFirstPoint(null);\n\n        // True if e.clientX/e.clientY describes x1\n        // x1 is the point with the smaller x coordinate\n        const newPoint = e.clientX < firstPoint.x;\n\n        const line = {\n          x1: newPoint ? e.clientX : firstPoint.x,\n          y1: newPoint ? e.clientY : firstPoint.y,\n          x2: !newPoint ? e.clientX : firstPoint.x,\n          y2: !newPoint ? e.clientY : firstPoint.y,\n        };\n\n        setLines(lines.concat(line));\n\n        canvasRef.current.appendChild(createLineElement(line));\n        canvasRef.current.appendChild(\n          createCircleElement(e.clientX, e.clientY)\n        );\n      }\n    } else if (mode === Mode.SHOOTING_RAY) {\n      const elem = tree.shootVerticalRay(\n        e.clientX,\n        window.innerHeight - e.clientY\n      );\n\n      if (elem === null || elem.element === undefined || elem.element.action === undefined) {\n        return;\n      }\n\n      if (elem.element.action.startsWith(\"alert:\")) {\n        alert(elem.element.action.split(\":\")[1]);\n      }\n    }\n  };\n\n  const handleMouseMove = (e) => {\n    if (mode !== Mode.SHOOTING_RAY || tree === undefined) {\n      return;\n    }\n\n    if (document.getElementById(\"ray\") !== null) {\n      document.getElementById(\"ray\").remove();\n    }\n\n    const elem = tree.shootVerticalRay(\n      e.clientX,\n      window.innerHeight - e.clientY\n    );\n\n    if (elem === null || elem.element === undefined) {\n      document.body.style.cursor = \"default\";\n      return;\n    }\n\n    if (elem.element.action !== undefined) {\n      document.body.style.cursor = \"pointer\";\n    } else {\n      document.body.style.cursor = \"default\";\n    }\n\n    const { startX, startY, endX, endY } = elem.element;\n    const topRayY =\n      startY + ((endY - startY) / (endX - startX)) * (e.clientX - startX);\n\n    canvasRef.current.appendChild(\n      createLineElement(\n        {\n          x1: e.clientX,\n          y1: e.clientY - 1,\n          x2: e.clientX,\n          y2: window.innerHeight - topRayY,\n        },\n        \"ray\",\n        \"limegreen\"\n      )\n    );\n  };\n\n  return (\n    <div className=\"App\" onClick={handleClick}>\n      <div className=\"vertical-lines\" />\n      <div className=\"horizontal-lines\" />\n      <div className=\"button-bar\">\n        <button\n          className={mode === Mode.CREATING_LINE_SEGMENT ? \"selected\" : \"\"}\n          onClick={() => setMode(Mode.CREATING_LINE_SEGMENT)}\n        >\n          <img src={plusIcon} alt=\"Create line segment\" />\n          <p>Create line segment</p>\n        </button>\n        <button\n          className={mode === Mode.SHOOTING_RAY ? \"selected\" : \"\"}\n          onClick={() => {\n            if (lines.length === 0) {\n              return;\n            }\n\n            setTree(buildTree(lines));\n            setMode(Mode.SHOOTING_RAY);\n          }}\n        >\n          <img src={rayIcon} alt=\"Shoot vertical ray\" />\n          <p>Shoot vertical ray</p>\n        </button>\n        <button\n          onClick={() => {\n            while (canvasRef.current.firstChild) {\n              canvasRef.current.removeChild(canvasRef.current.firstChild);\n            }\n\n            let lines = [];\n\n            const createButton = (x, y, text, action, width = 200, height = 50) => {\n              lines.push(...[\n                { x1: x + 1, y1: y, x2: x + width - 1, y2: y, action: action },\n                { x1: x - 1.001, y1: y, x2: x - 1, y2: y + height },\n                { x1: x, y1: y + height, x2: x + width, y2: y + height },\n                { x1: x + width + 0.999, y1: y, x2: x + width + 1, y2: y + height },\n              ]);\n\n              canvasRef.current.appendChild(createTextElement(x + width / 2, y + height / 2, text));\n            }\n\n            createButton(100, 150, \"Button #1\", \"alert:This is button #1\");\n            createButton(400, 150, \"Button #2\", \"alert:This is button #2\");\n            createButton(100, 250, \"Button #3\", \"alert:This is button #3\");\n            createButton(400, 250, \"Button #4\", \"alert:This is button #4\");\n            createButton(100, 350, \"Button #5\", \"alert:This is button #5\");\n            createButton(400, 350, \"Button #6\", \"alert:This is button #6\");\n\n            lines.forEach((line) => {\n              canvasRef.current.appendChild(createLineElement(line));\n              canvasRef.current.appendChild(\n                createCircleElement(line.x1, line.y1)\n              );\n              canvasRef.current.appendChild(\n                createCircleElement(line.x2, line.y2)\n              );\n            });\n\n            setLines(lines);\n            setTree(buildTree(lines));\n            setMode(Mode.SHOOTING_RAY);\n          }}\n        >\n          <img src={wrenchIcon} alt=\"Create user interface\" />\n          <p>Create user interface</p>\n        </button>\n        {ENABLE_COPY_BUTTON ? (\n          <button\n            onClick={() => {\n              var textarea = document.createElement(\"textarea\");\n              document.body.appendChild(textarea);\n              textarea.value = JSON.stringify(lines);\n              textarea.select();\n              document.execCommand(\"copy\");\n              document.body.removeChild(textarea);\n            }}\n          >\n            <img src={clipboardIcon} alt=\"Copy lines to clipboard\" />\n            <p>Copy lines to clipboard</p>\n          </button>\n        ) : null}\n      </div>\n      <svg\n        ref={canvasRef}\n        width={window.innerWidth}\n        height={window.innerHeight}\n        onMouseMove={handleMouseMove}\n      />\n    </div>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}