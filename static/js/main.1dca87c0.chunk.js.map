{"version":3,"sources":["mode.js","App.js","reportWebVitals.js","index.js"],"names":["modes","NONE","CREATING_LINE_SEGMENT","App","useState","mode","setMode","firstPoint","setFirstPoint","lines","setLines","className","onClick","e","target","tagName","toLowerCase","Mode","x","clientX","y","clientY","concat","x1","y1","x2","y2","src","alt","width","window","innerWidth","height","innerHeight","cx","cy","r","map","line","idx","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAKeA,EALD,CACZC,KAAM,EACNC,sBAAuB,G,eCuDVC,EArDH,WAAO,IAAD,EACQC,mBAAS,GADjB,mBACTC,EADS,KACHC,EADG,OAEoBF,mBAAS,MAF7B,mBAETG,EAFS,KAEGC,EAFH,OAGUJ,mBAAS,IAHnB,mBAGTK,EAHS,KAGFC,EAHE,KA2BhB,OACE,sBAAKC,UAAU,MAAMC,QAvBH,SAACC,GACoB,QAAnCA,EAAEC,OAAOC,QAAQC,eAEjBX,IAASY,EAAKf,wBACG,OAAfK,EACFC,EAAc,CACZU,EAAGL,EAAEM,QACLC,EAAGP,EAAEQ,WAGPf,EAAQW,EAAKhB,MACbO,EAAc,MACdE,EAASD,EAAMa,OAAO,CACpBC,GAAIhB,EAAWW,EACfM,GAAIjB,EAAWa,EACfK,GAAIZ,EAAEM,QACNO,GAAIb,EAAEQ,cAOZ,UACE,qBAAKV,UAAU,mBACf,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,aAAf,SACE,yBAAQC,QAAS,kBAAMN,EAAQW,EAAKf,wBAApC,UACE,qBAAKyB,IAAI,0BAA0BC,IAAI,wBACvC,yDAGJ,sBAAKC,MAAOC,OAAOC,WAAYC,OAAQF,OAAOG,YAA9C,UACkB,OAAf1B,EACC,wBAAQ2B,GAAI3B,EAAWW,EAAGiB,GAAI5B,EAAWa,EAAGgB,EAAG,IAC7C,KACH3B,EAAM4B,KAAI,SAACC,EAAMC,GAAP,OACT,eAAC,WAAD,WACE,wBAAQL,GAAII,EAAKf,GAAIY,GAAIG,EAAKd,GAAIY,EAAG,IACrC,wBAAQF,GAAII,EAAKb,GAAIU,GAAIG,EAAKZ,GAAIU,EAAG,IACrC,sBAAgBb,GAAIe,EAAKf,GAAIC,GAAIc,EAAKd,GAAIC,GAAIa,EAAKb,GAAIC,GAAIY,EAAKZ,IAArDa,KAHEA,aClCVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.1dca87c0.chunk.js","sourcesContent":["const modes = {\n  NONE: 0,\n  CREATING_LINE_SEGMENT: 1\n};\n\nexport default modes;","import React, { Fragment, useState } from 'react';\nimport Mode from './mode';\nimport './App.scss';\n\nconst App = () => {\n  const [mode, setMode] = useState(0);\n  const [firstPoint, setFirstPoint] = useState(null);\n  const [lines, setLines] = useState([]);\n\n  const handleClick = (e) => {\n    if (e.target.tagName.toLowerCase() !== \"svg\") return;\n\n    if (mode === Mode.CREATING_LINE_SEGMENT) {\n      if (firstPoint === null) {\n        setFirstPoint({\n          x: e.clientX,\n          y: e.clientY\n        });\n      } else {\n        setMode(Mode.NONE);\n        setFirstPoint(null);\n        setLines(lines.concat({\n          x1: firstPoint.x,\n          y1: firstPoint.y,\n          x2: e.clientX,\n          y2: e.clientY\n        }));\n      }\n    }\n  };\n\n  return (\n    <div className=\"App\" onClick={handleClick}>\n      <div className=\"vertical-lines\" />\n      <div className=\"horizontal-lines\" />\n      <div className=\"button-bar\">\n        <button onClick={() => setMode(Mode.CREATING_LINE_SEGMENT)}>\n          <img src=\"https://placehold.it/32\" alt=\"Create line segment\" />\n          <p>Create line segment</p>\n        </button>\n      </div>\n      <svg width={window.innerWidth} height={window.innerHeight}>\n        {firstPoint !== null ? (\n          <circle cx={firstPoint.x} cy={firstPoint.y} r={4} />\n        ) : null}\n        {lines.map((line, idx) => (\n          <Fragment key={idx}>\n            <circle cx={line.x1} cy={line.y1} r={4} />\n            <circle cx={line.x2} cy={line.y2} r={4} />\n            <line key={idx} x1={line.x1} y1={line.y1} x2={line.x2} y2={line.y2} />\n          </Fragment>\n        ))}\n      </svg>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}